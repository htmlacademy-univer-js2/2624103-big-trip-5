{"version":3,"file":"bundle.c7674264e06c84510883.js","mappings":"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","sources":["webpack://big-trip/./src/model/mock-data.js","webpack://big-trip/./src/model/model.js","webpack://big-trip/./src/render.js","webpack://big-trip/./src/view/abstract-view.js","webpack://big-trip/./src/view/filters-view.js","webpack://big-trip/./src/view/sort-view.js","webpack://big-trip/./src/utils/date.js","webpack://big-trip/./src/const.js","webpack://big-trip/./src/view/event-edit-view.js","webpack://big-trip/./src/view/event-view.js","webpack://big-trip/./src/view/trip-info-view.js","webpack://big-trip/./src/utils/trip.js","webpack://big-trip/./src/view/new-event-button-view.js","webpack://big-trip/./src/presenter/trip-presenter.js","webpack://big-trip/./src/main.js"],"sourcesContent":["const EVENT_TYPES = ['taxi', 'bus', 'train', 'ship', 'drive', 'flight', 'check-in', 'sightseeing', 'restaurant'];\nconst CITIES = ['Amsterdam', 'Geneva', 'Chamonix', 'Saint Petersburg', 'Tokyo', 'Osaka', 'Kyoto', 'New York', 'Paris', 'Berlin'];\nconst LOREM_IPSUM = [\n  'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  'Cras aliquet varius magna, non porta ligula feugiat eget.',\n  'Fusce tristique felis at fermentum pharetra.',\n  'Aliquam id orci ut lectus varius viverra.',\n  'Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.'\n];\n\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nconst getRandomArrayItem = (array) => array[getRandomInt(0, array.length - 1)];\n\nconst generateOffers = () => EVENT_TYPES.flatMap((type) => {\n  const count = getRandomInt(2, 5);\n  return Array(count).fill().map((_, i) => ({\n    id: `${type}-${i}`,\n    title: `${type} option ${i + 1}`,\n    price: getRandomInt(20, 200),\n    type\n  }));\n});\n\nconst generateDestinations = () => CITIES.map((city, index) => ({\n  id: `dest-${index}`,\n  name: city,\n  description: Array(getRandomInt(1, 3))\n    .fill()\n    .map(() => getRandomArrayItem(LOREM_IPSUM))\n    .join(' '),\n  pictures: Array(getRandomInt(1, 5)).fill().map((_, i) => ({\n    src: `https://loremflickr.com/300/200/${city}?random=${getRandomInt(1, 100)}`,\n    description: `${city} ${i + 1}`\n  }))\n}));\n\nconst generateTripEvents = (destinations, offers) => {\n  const count = getRandomInt(5, 15);\n  return Array(count).fill().map((_, i) => {\n    const type = getRandomArrayItem(EVENT_TYPES);\n    const destination = getRandomArrayItem(destinations);\n    const basePrice = getRandomInt(50, 1000);\n    const dateFrom = new Date();\n    dateFrom.setDate(dateFrom.getDate() + getRandomInt(-10, 10));\n    dateFrom.setHours(getRandomInt(0, 23), getRandomInt(0, 59));\n    \n    const dateTo = new Date(dateFrom);\n    dateTo.setHours(dateFrom.getHours() + getRandomInt(1, 12));\n    \n    const typeOffers = offers.filter((offer) => offer.type === type);\n    const offerIds = typeOffers\n      .slice(0, getRandomInt(0, typeOffers.length))\n      .map((offer) => offer.id);\n\n    return {\n      id: `event-${i}`,\n      type,\n      destinationId: destination.id,\n      startDate: dateFrom.toISOString(),\n      endDate: dateTo.toISOString(),\n      basePrice,\n      offerIds,\n      isFavorite: Math.random() > 0.7\n    };\n  });\n};\n\nexport const generateMockData = () => {\n  const offers = generateOffers();\n  const destinations = generateDestinations();\n  const tripEvents = generateTripEvents(destinations, offers);\n  \n  return { offers, destinations, tripEvents };\n};","import { generateMockData } from './mock-data.js';\n\nexport default class Model {\n  constructor() {\n    this._tripEvents = [];\n    this._destinations = [];\n    this._offers = [];\n    this._init();\n  }\n\n  _init() {\n    const mockData = generateMockData();\n    this._tripEvents = this._sortEvents(mockData.tripEvents);\n    this._destinations = mockData.destinations;\n    this._offers = mockData.offers;\n  }\n\n  getTripEvents() {\n    return this._tripEvents;\n  }\n\n  getOffersByType(type) {\n    return this._offers.find((offerGroup) => offerGroup.type === type)?.offers || [];\n  }\n\n  getDestinationById(id) {\n    return this._destinations.find((destination) => destination.id === id);\n  }\n\n  getOffersByIds(ids) {\n    return this._offers.filter((offer) => ids.includes(offer.id));\n  }\n\n  updateTripEvent(updatedEvent) {\n    this._tripEvents = this._sortEvents(\n      this._tripEvents.map((event) => \n        event.id === updatedEvent.id ? updatedEvent : event\n      )\n    );\n  }\n\n  deleteTripEvent(id) {\n    this._tripEvents = this._tripEvents.filter((event) => event.id !== id);\n  }\n\n  addTripEvent(event) {\n    this._tripEvents = this._sortEvents([...this._tripEvents, event]);\n  }\n\n  _sortEvents(events) {\n    return events.sort((a, b) => new Date(a.startDate) - new Date(b.startDate));\n  }\n}","const RenderPosition = {\n  BEFOREBEGIN: 'beforebegin',\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend',\n};\n\nfunction createElement(template) {\n  const newElement = document.createElement('div');\n  newElement.innerHTML = template;\n\n  return newElement.firstElementChild;\n}\n\nfunction render(component, container, place = RenderPosition.BEFOREEND) {\n  container.insertAdjacentElement(place, component.getElement());\n}\n\nexport {RenderPosition, createElement, render};\n","export default class AbstractView {\n    constructor() {\n      if (new.target === AbstractView) {\n        throw new Error('');\n      }\n      \n      this._element = null;\n      this._callback = {};\n    }\n  \n    getTemplate() {\n      throw new Error('');\n    }\n  \n    getElement() {\n      if (!this._element) {\n        this._element = this._createElement(this.getTemplate());\n      }\n      \n      return this._element;\n    }\n  \n    removeElement() {\n      this._element = null;\n    }\n  \n    _createElement(template) {\n      const newElement = document.createElement('div');\n      newElement.innerHTML = template;\n      \n      return newElement.firstElementChild;\n    }\n  }","import AbstractView from './abstract-view.js';\n\nexport default class FiltersView extends AbstractView {\n  #filters = null;\n  #currentFilter = null;\n  #handleFilterChange = null;\n\n  constructor({ filters, currentFilter, onFilterChange }) {\n    super();\n    this.#filters = filters;\n    this.#currentFilter = currentFilter;\n    this.#handleFilterChange = onFilterChange;\n    this.element.addEventListener('change', this.#filterChangeHandler);\n  }\n\n  get template() {\n    return `\n      <form class=\"trip-filters\" action=\"#\" method=\"get\">\n        ${this.#filters.map((filter) => `\n          <div class=\"trip-filters__filter\">\n            <input id=\"filter-${filter.type}\" class=\"trip-filters__filter-input visually-hidden\" \n                   type=\"radio\" name=\"trip-filter\" value=\"${filter.type}\"\n                   ${filter.type === this.#currentFilter ? 'checked' : ''}\n                   ${filter.count === 0 ? 'disabled' : ''}>\n            <label class=\"trip-filters__filter-label\" for=\"filter-${filter.type}\">\n              ${filter.name} ${filter.count > 0 ? `(${filter.count})` : ''}\n            </label>\n          </div>\n        `).join('')}\n        <button class=\"visually-hidden\" type=\"submit\">Accept filter</button>\n      </form>\n    `;\n  }\n\n  #filterChangeHandler = (evt) => {\n    evt.preventDefault();\n    this.#handleFilterChange(evt.target.value);\n  };\n}","import {createElement} from '../render';\n\nexport default class SortView {\n  constructor(currentSortType) {\n    this._currentSortType = currentSortType;\n    this._element = null;\n  }\n\n  getTemplate() {\n    return `\n      <form class=\"trip-events__trip-sort  trip-sort\" action=\"#\" method=\"get\">\n        <div class=\"trip-sort__item  trip-sort__item--day\">\n          <input \n            id=\"sort-day\" \n            class=\"trip-sort__input  visually-hidden\" \n            type=\"radio\" \n            name=\"trip-sort\" \n            value=\"day\"\n            ${this._currentSortType === 'day' ? 'checked' : ''}\n          >\n          <label class=\"trip-sort__btn\" for=\"sort-day\">Day</label>\n        </div>\n\n        <div class=\"trip-sort__item  trip-sort__item--event\">\n          <input \n            id=\"sort-event\" \n            class=\"trip-sort__input  visually-hidden\" \n            type=\"radio\" \n            name=\"trip-sort\" \n            value=\"event\" \n            disabled\n          >\n          <label class=\"trip-sort__btn\" for=\"sort-event\">Event</label>\n        </div>\n\n        <div class=\"trip-sort__item  trip-sort__item--time\">\n          <input \n            id=\"sort-time\" \n            class=\"trip-sort__input  visually-hidden\" \n            type=\"radio\" \n            name=\"trip-sort\" \n            value=\"time\"\n            ${this._currentSortType === 'time' ? 'checked' : ''}\n          >\n          <label class=\"trip-sort__btn\" for=\"sort-time\">Time</label>\n        </div>\n\n        <div class=\"trip-sort__item  trip-sort__item--price\">\n          <input \n            id=\"sort-price\" \n            class=\"trip-sort__input  visually-hidden\" \n            type=\"radio\" \n            name=\"trip-sort\" \n            value=\"price\"\n            ${this._currentSortType === 'price' ? 'checked' : ''}\n          >\n          <label class=\"trip-sort__btn\" for=\"sort-price\">Price</label>\n        </div>\n\n        <div class=\"trip-sort__item  trip-sort__item--offer\">\n          <input \n            id=\"sort-offer\" \n            class=\"trip-sort__input  visually-hidden\" \n            type=\"radio\" \n            name=\"trip-sort\" \n            value=\"offer\" \n            disabled\n          >\n          <label class=\"trip-sort__btn\" for=\"sort-offer\">Offers</label>\n        </div>\n      </form>\n    `;\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n  setSortTypeChangeHandler(callback) {\n    this._callback.sortTypeChange = callback;\n    this.getElement().addEventListener('change', this._sortTypeChangeHandler);\n  }\n  \n  _sortTypeChangeHandler(evt) {\n    evt.preventDefault();\n    this._callback.sortTypeChange(evt.target.value);\n  }\n}","// src/utils/date.js\n\nexport const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    }).toUpperCase();\n  };\n  \n  export const formatTime = (date) => {\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  \n  export const formatDateTime = (date) => {\n    return date.toISOString().slice(0, 16);\n  };\n  \n  export const calculateDuration = (startDate, endDate) => {\n    const diff = endDate - startDate;\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const hours = Math.floor (diff / (1000 * 60 * 60)) % 24;\n    const minutes = Math.floor (diff / (1000 * 60)) % 60;\n  \n    if (days > 0) {\n      return `${days}D ${hours}H ${minutes}M`;\n    } else if (hours > 0) {\n      return `${hours}H ${minutes}M`;\n    }\n    return `${minutes}M`;\n  };\n  \n  export const getDefaultDates = () => {\n    const startDate = new Date();\n    const endDate = new Date(startDate);\n    endDate.setHours(startDate.getHours() + 1);\n    return { startDate, endDate };\n  };\n  \n  export const isDatesEqual = (dateA, dateB) => {\n    if (dateA === null && dateB === null) {\n      return true;\n    }\n  \n    return dateA instanceof Date && dateB instanceof Date \n      ? dateA.getTime() === dateB.getTime() \n      : false;\n  };","export const EVENT_TYPES = [\n  'taxi', 'bus', 'train', 'ship', \n  'drive', 'flight', 'check-in', \n  'sightseeing', 'restaurant'\n];\n\nexport const FilterType = {\n  EVERYTHING: 'everything',\n  FUTURE: 'future',\n  PAST: 'past'\n};\n\nexport const SortType = {\n  DAY: 'day',\n  TIME: 'time',\n  PRICE: 'price'\n};\n\nexport const DEFAULT_EVENT = {\n  id: '0',\n  type: 'flight',\n  destination: '',\n  dateFrom: new Date(),\n  dateTo: new Date(),\n  basePrice: 0,\n  offers: [],\n  isFavorite: false\n};\n\nexport const RenderPosition = {\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend'\n};","import AbstractView from './abstract-view.js';\nimport { formatDate, formatTime } from '../utils/date.js';\nimport { EVENT_TYPES } from '../const.js';\n\nexport default class EventEditView extends AbstractView {\n  #event = null;\n  #destinations = null;\n  #offers = null;\n  #handleFormSubmit = null;\n  #handleDeleteClick = null;\n  #handleCloseClick = null;\n\n  constructor({ event, destinations, offers, onFormSubmit, onDeleteClick, onCloseClick }) {\n    super();\n    this.#event = event;\n    this.#destinations = destinations;\n    this.#offers = offers;\n    this.#handleFormSubmit = onFormSubmit;\n    this.#handleDeleteClick = onDeleteClick;\n    this.#handleCloseClick = onCloseClick;\n\n    this.element.addEventListener('submit', this.#formSubmitHandler);\n    this.element.querySelector('.event__reset-btn').addEventListener('click', this.#deleteClickHandler);\n    this.element.querySelector('.event__rollup-btn').addEventListener('click', this.#closeClickHandler);\n  }\n\n  get template() {\n    const { type, destination, dateFrom, dateTo, basePrice, offers, isFavorite } = this.#event;\n    const destinationData = this.#destinations.find((d) => d.id === destination);\n    const typeOffers = this.#offers.find((o) => o.type === type)?.offers || [];\n\n    return `\n      <li class=\"trip-events__item\">\n        <form class=\"event event--edit\" action=\"#\" method=\"post\">\n          <header class=\"event__header\">\n            ${this.#renderTypeSelector(type)}\n            ${this.#renderDestinationSelector(destinationData)}\n            ${this.#renderTimeFields(dateFrom, dateTo)}\n            ${this.#renderPriceField(basePrice)}\n            ${this.#renderButtons()}\n            ${this.#renderFavoriteButton(isFavorite)}\n          </header>\n          <section class=\"event__details\">\n            ${this.#renderOffersSection(typeOffers, offers)}\n            ${this.#renderDestinationSection(destinationData)}\n          </section>\n        </form>\n      </li>\n    `;\n  }\n\n  #renderTypeSelector(currentType) {\n    return `\n      <div class=\"event__type-wrapper\">\n        <label class=\"event__type event__type-btn\" for=\"event-type-toggle-1\">\n          <span class=\"visually-hidden\">Choose event type</span>\n          <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/${currentType}.png\" alt=\"Event type icon\">\n        </label>\n        <input class=\"event__type-toggle visually-hidden\" id=\"event-type-toggle-1\" type=\"checkbox\">\n\n        <div class=\"event__type-list\">\n          <fieldset class=\"event__type-group\">\n            <legend class=\"visually-hidden\">Event type</legend>\n            ${EVENT_TYPES.map((type) => `\n              <div class=\"event__type-item\">\n                <input id=\"event-type-${type}-1\" class=\"event__type-input visually-hidden\" \n                       type=\"radio\" name=\"event-type\" value=\"${type}\"\n                       ${type === currentType ? 'checked' : ''}>\n                <label class=\"event__type-label event__type-label--${type}\" for=\"event-type-${type}-1\">\n                  ${type.charAt(0).toUpperCase() + type.slice(1)}\n                </label>\n              </div>\n            `).join('')}\n          </fieldset>\n        </div>\n      </div>\n    `;\n  }\n\n  #renderDestinationSelector(destination) {\n    return `\n      <div class=\"event__field-group event__field-group--destination\">\n        <label class=\"event__label event__type-output\" for=\"event-destination-1\">\n          ${this.#event.type}\n        </label>\n        <input class=\"event__input event__input--destination\" id=\"event-destination-1\" \n               type=\"text\" name=\"event-destination\" value=\"${destination?.name || ''}\" \n               list=\"destination-list-1\" required>\n        <datalist id=\"destination-list-1\">\n          ${this.#destinations.map((d) => `\n            <option value=\"${d.name}\"></option>\n          `).join('')}\n        </datalist>\n      </div>\n    `;\n  }\n\n  #renderTimeFields(dateFrom, dateTo) {\n    return `\n      <div class=\"event__field-group event__field-group--time\">\n        <label class=\"visually-hidden\" for=\"event-start-time-1\">From</label>\n        <input class=\"event__input event__input--time\" id=\"event-start-time-1\" \n               type=\"text\" name=\"event-start-time\" \n               value=\"${formatDate(dateFrom)} ${formatTime(dateFrom)}\" required>\n        &mdash;\n        <label class=\"visually-hidden\" for=\"event-end-time-1\">To</label>\n        <input class=\"event__input event__input--time\" id=\"event-end-time-1\" \n               type=\"text\" name=\"event-end-time\" \n               value=\"${formatDate(dateTo)} ${formatTime(dateTo)}\" required>\n      </div>\n    `;\n  }\n\n  #renderPriceField(price) {\n    return `\n      <div class=\"event__field-group event__field-group--price\">\n        <label class=\"event__label\" for=\"event-price-1\">\n          <span class=\"visually-hidden\">Price</span>\n          &euro;\n        </label>\n        <input class=\"event__input event__input--price\" id=\"event-price-1\" \n               type=\"number\" name=\"event-price\" value=\"${price}\" min=\"0\" required>\n      </div>\n    `;\n  }\n\n  #renderButtons() {\n    return `\n      <button class=\"event__save-btn btn btn--blue\" type=\"submit\">Save</button>\n      <button class=\"event__reset-btn\" type=\"reset\">Delete</button>\n      <button class=\"event__rollup-btn\" type=\"button\">\n        <span class=\"visually-hidden\">Close event</span>\n      </button>\n    `;\n  }\n\n  #renderFavoriteButton(isFavorite) {\n    return `\n      <input id=\"event-favorite-1\" class=\"event__favorite-checkbox visually-hidden\" \n             type=\"checkbox\" name=\"event-favorite\" ${isFavorite ? 'checked' : ''}>\n      <label class=\"event__favorite-btn\" for=\"event-favorite-1\">\n        <span class=\"visually-hidden\">Add to favorite</span>\n        <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n          <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"/>\n        </svg>\n      </label>\n    `;\n  }\n\n  #renderOffersSection(offers, selectedOffers) {\n    if (!offers.length) {\n      return '';\n    }\n\n    return `\n      <section class=\"event__section event__section--offers\">\n        <h3 class=\"event__section-title event__section-title--offers\">Offers</h3>\n        <div class=\"event__available-offers\">\n          ${offers.map((offer) => `\n            <div class=\"event__offer-selector\">\n              <input class=\"event__offer-checkbox visually-hidden\" \n                     id=\"event-offer-${offer.id}\" type=\"checkbox\" \n                     name=\"event-offer\" value=\"${offer.id}\"\n                     ${selectedOffers.includes(offer.id) ? 'checked' : ''}>\n              <label class=\"event__offer-label\" for=\"event-offer-${offer.id}\">\n                <span class=\"event__offer-title\">${offer.title}</span>\n                &plus;&euro;&nbsp;\n                <span class=\"event__offer-price\">${offer.price}</span>\n              </label>\n            </div>\n          `).join('')}\n        </div>\n      </section>\n    `;\n  }\n\n  #renderDestinationSection(destination) {\n    if (!destination) {\n      return '';\n    }\n\n    return `\n      <section class=\"event__section event__section--destination\">\n        <h3 class=\"event__section-title event__section-title--destination\">Destination</h3>\n        ${destination.description ? `\n          <p class=\"event__destination-description\">${destination.description}</p>\n        ` : ''}\n        ${destination.pictures?.length ? `\n          <div class=\"event__photos-container\">\n            <div class=\"event__photos-tape\">\n              ${destination.pictures.map((pic) => `\n                <img class=\"event__photo\" src=\"${pic.src}\" alt=\"${pic.description}\">\n              `).join('')}\n            </div>\n          </div>\n        ` : ''}\n      </section>\n    `;\n  }\n\n  #formSubmitHandler = (evt) => {\n    evt.preventDefault();\n    this.#handleFormSubmit(this.#parseFormData());\n  };\n\n  #deleteClickHandler = (evt) => {\n    evt.preventDefault();\n    this.#handleDeleteClick();\n  };\n\n  #closeClickHandler = (evt) => {\n    evt.preventDefault();\n    this.#handleCloseClick();\n  };\n\n  #parseFormData() {\n    const form = this.element;\n    return {\n      ...this.#event,\n      type: form.querySelector('input[name=\"event-type\"]:checked').value,\n      destination: this.#findDestinationId(form.querySelector('input[name=\"event-destination\"]').value),\n      dateFrom: new Date(form.querySelector('input[name=\"event-start-time\"]').value),\n      dateTo: new Date(form.querySelector('input[name=\"event-end-time\"]').value),\n      basePrice: parseInt(form.querySelector('input[name=\"event-price\"]').value),\n      offers: Array.from(form.querySelectorAll('input[name=\"event-offer\"]:checked')).map(input => input.value),\n      isFavorite: form.querySelector('input[name=\"event-favorite\"]')?.checked || false\n    };\n  }\n\n  #findDestinationId(name) {\n    const destination = this.#destinations.find((d) => d.name === name);\n    return destination ? destination.id : '';\n  }\n}","import AbstractView from './abstract-view.js';\nimport { formatDate, formatTime, calculateDuration } from '../utils/date.js';\n\nexport default class EventView extends AbstractView {\n  #event = null;\n  #destination = null;\n  #offers = null;\n  #handleEditClick = null;\n  #handleFavoriteClick = null;\n\n  constructor({ event, destination, offers, onEditClick, onFavoriteClick }) {\n    super();\n    this.#event = event;\n    this.#destination = destination;\n    this.#offers = offers;\n    this.#handleEditClick = onEditClick;\n    this.#handleFavoriteClick = onFavoriteClick;\n\n    this.element.querySelector('.event__rollup-btn')\n      .addEventListener('click', this.#editClickHandler);\n    this.element.querySelector('.event__favorite-btn')\n      .addEventListener('click', this.#favoriteClickHandler);\n  }\n\n  get template() {\n    const { type, dateFrom, dateTo, basePrice, isFavorite } = this.#event;\n\n    return `\n      <li class=\"trip-events__item\">\n        <div class=\"event\">\n          <time class=\"event__date\" datetime=\"${dateFrom.toISOString()}\">\n            ${formatDate(dateFrom)}\n          </time>\n          <div class=\"event__type\">\n            <img class=\"event__type-icon\" width=\"42\" height=\"42\" \n                 src=\"img/icons/${type}.png\" alt=\"Event type icon\">\n          </div>\n          <h3 class=\"event__title\">${type} ${this.#destination?.name || ''}</h3>\n          \n          <div class=\"event__schedule\">\n            <p class=\"event__time\">\n              <time class=\"event__start-time\" datetime=\"${dateFrom.toISOString()}\">\n                ${formatTime(dateFrom)}\n              </time>\n              &mdash;\n              <time class=\"event__end-time\" datetime=\"${dateTo.toISOString()}\">\n                ${formatTime(dateTo)}\n              </time>\n            </p>\n            <p class=\"event__duration\">${calculateDuration(dateFrom, dateTo)}</p>\n          </div>\n          \n          <p class=\"event__price\">\n            &euro;&nbsp;<span class=\"event__price-value\">${basePrice}</span>\n          </p>\n          \n          ${this.#renderOffers()}\n          \n          <button class=\"event__favorite-btn ${isFavorite ? 'event__favorite-btn--active' : ''}\" type=\"button\">\n            <span class=\"visually-hidden\">Add to favorite</span>\n            <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n              <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"/>\n            </svg>\n          </button>\n          \n          <button class=\"event__rollup-btn\" type=\"button\">\n            <span class=\"visually-hidden\">Open event</span>\n          </button>\n        </div>\n      </li>\n    `;\n  }\n\n  #renderOffers() {\n    if (!this.#offers?.length) {\n      return '';\n    }\n\n    return `\n      <h4 class=\"visually-hidden\">Offers:</h4>\n      <ul class=\"event__selected-offers\">\n        ${this.#offers.map((offer) => `\n          <li class=\"event__offer\">\n            <span class=\"event__offer-title\">${offer.title}</span>\n            &plus;&euro;&nbsp;\n            <span class=\"event__offer-price\">${offer.price}</span>\n          </li>\n        `).join('')}\n      </ul>\n    `;\n  }\n\n  #editClickHandler = (evt) => {\n    evt.preventDefault();\n    this.#handleEditClick();\n  };\n\n  #favoriteClickHandler = (evt) => {\n    evt.preventDefault();\n    this.#handleFavoriteClick();\n  };\n}","import AbstractView from './abstract-view.js';\nimport { formatDate } from '../utils/date.js';\nimport { getTripTitle, calculateTotalPrice } from '../utils/trip.js';\n\nexport default class TripInfoView extends AbstractView {\n  #events = null;\n  #destinations = null;\n\n  constructor({ events, destinations }) {\n    super();\n    this.#events = events;\n    this.#destinations = destinations;\n  }\n\n  get template() {\n    if (!this.#events.length) {\n      return '<div></div>';\n    }\n\n    const sortedEvents = [...this.#events].sort((a, b) => a.dateFrom - b.dateFrom);\n    const startDate = sortedEvents[0].dateFrom;\n    const endDate = sortedEvents[sortedEvents.length - 1].dateTo;\n\n    return `\n      <section class=\"trip-main__trip-info trip-info\">\n        <div class=\"trip-info__main\">\n          <h1 class=\"trip-info__title\">${getTripTitle(sortedEvents, this.#destinations)}</h1>\n          <p class=\"trip-info__dates\">${formatDate(startDate)}&nbsp;&mdash;&nbsp;${formatDate(endDate)}</p>\n        </div>\n        <p class=\"trip-info__cost\">\n          Total: &euro;&nbsp;<span class=\"trip-info__cost-value\">${calculateTotalPrice(this.#events)}</span>\n        </p>\n      </section>\n    `;\n  }\n}","export const getTripTitle = (events, destinations) => {\n    if (events.length === 0) return '';\n    \n    const destinationNames = events\n      .map((event) => destinations.find((d) => d.id === event.destination)?.name)\n      .filter(Boolean);\n  \n    if (destinationNames.length <= 3) {\n      return destinationNames.join(' — ');\n    }\n  \n    return `${destinationNames[0]} — ... — ${destinationNames[destinationNames.length - 1]}`;\n  };\n  \n  export const calculateTotalPrice = (events) => {\n    return events.reduce((total, event) => total + event.basePrice, 0);\n  };","import AbstractView from './abstract-view.js';\n\nexport default class NewEventButtonView extends AbstractView {\n  #handleClick = null;\n\n  constructor({ onClick }) {\n    super();\n    this.#handleClick = onClick;\n    this.element.addEventListener('click', this.#clickHandler);\n  }\n\n  get template() {\n    return `\n      <button class=\"trip-main__event-add-btn btn btn--big btn--yellow\" type=\"button\">\n        <span class=\"visually-hidden\">New event</span>+ New event\n      </button>\n    `;\n  }\n\n  #clickHandler = (evt) => {\n    evt.preventDefault();\n    this.#handleClick();\n  };\n}","import { render, RenderPosition } from '../render';\nimport FiltersView from '../view/filters-view';\nimport SortView from '../view/sort-view';\nimport EventEditView from '../view/event-edit-view';\nimport EventView from '../view/event-view';\nimport TripInfoView from '../view/trip-info-view';\nimport NewEventButtonView from '../view/new-event-button-view';\nimport { DEFAULT_EVENT, FilterType, SortType } from '../const';\n\nexport default class TripPresenter {\n  #tripContainer = null;\n  #eventsModel = null;\n  #destinationsModel = null;\n  #offersModel = null;\n\n  #tripInfoComponent = null;\n  #filtersComponent = null;\n  #sortComponent = null;\n  #newEventButtonComponent = null;\n  #currentFilter = FilterType.EVERYTHING;\n  #currentSort = SortType.DAY;\n\n  constructor(tripContainer, eventsModel, destinationsModel, offersModel) {\n    this.#tripContainer = tripContainer;\n    this.#eventsModel = eventsModel;\n    this.#destinationsModel = destinationsModel;\n    this.#offersModel = offersModel;\n  }\n\n  init() {\n    this.#renderTripInfo();\n    this.#renderFilters();\n    this.#renderSort();\n    this.#renderEventsList();\n    this.#renderNewEventButton();\n  }\n\n  #renderTripInfo() {\n    const events = this.#eventsModel.getEvents();\n    const destinations = this.#destinationsModel.getDestinations();\n    \n    this.#tripInfoComponent = new TripInfoView({\n      events,\n      destinations\n    });\n    \n    render(this.#tripInfoComponent, this.#tripContainer, RenderPosition.AFTERBEGIN);\n  }\n\n  #renderFilters() {\n    const events = this.#eventsModel.getEvents();\n    \n    const filters = [\n      {\n        type: FilterType.EVERYTHING,\n        name: 'Everything',\n        count: events.length\n      },\n      {\n        type: FilterType.FUTURE,\n        name: 'Future',\n        count: this.#eventsModel.getFutureEvents().length\n      },\n      {\n        type: FilterType.PAST,\n        name: 'Past',\n        count: this.#eventsModel.getPastEvents().length\n      }\n    ];\n    \n    this.#filtersComponent = new FiltersView({\n      filters,\n      currentFilter: this.#currentFilter,\n      onFilterChange: this.#handleFilterTypeChange\n    });\n    \n    render(\n      this.#filtersComponent,\n      this.#tripContainer.querySelector('.trip-controls__filters')\n    );\n  }\n\n  #renderSort() {\n    this.#sortComponent = new SortView({\n      currentSortType: this.#currentSort,\n      onSortTypeChange: this.#handleSortTypeChange\n    });\n    \n    render(\n      this.#sortComponent,\n      this.#tripContainer.querySelector('.trip-events'),\n      RenderPosition.AFTERBEGIN\n    );\n  }\n\n  #renderEventsList() {\n    const eventsListElement = this.#tripContainer.querySelector('.trip-events__list');\n    const events = this.#getSortedEvents(this.#getFilteredEvents());\n    const destinations = this.#destinationsModel.getDestinations();\n    const offers = this.#offersModel.getOffers();\n\n  \n    const firstEvent = events[0];\n    if (firstEvent) {\n      render(\n        new EventEditView({\n          event: firstEvent,\n          destinations,\n          offers,\n          onFormSubmit: this.#handleEventUpdate,\n          onDeleteClick: this.#handleEventDelete,\n          onCloseClick: this.#handleCloseEditForm\n        }),\n        eventsListElement\n      );\n    }\n\n    \n    events.slice(1, 4).forEach((event) => {\n      render(\n        new EventView({\n          event,\n          destination: this.#destinationsModel.getDestinationById(event.destination),\n          offers: this.#offersModel.getOffersByType(event.type)\n            .filter((offer) => event.offers.includes(offer.id)),\n          onEditClick: () => this.#handleEditClick(event),\n          onFavoriteClick: () => this.#handleFavoriteToggle(event)\n        }),\n        eventsListElement\n      );\n    });\n  }\n\n  #renderNewEventButton() {\n    this.#newEventButtonComponent = new NewEventButtonView({\n      onClick: this.#handleNewEventClick\n    });\n    \n    render(\n      this.#newEventButtonComponent,\n      this.#tripContainer.querySelector('.trip-main')\n    );\n  }\n\n  #getFilteredEvents() {\n    switch (this.#currentFilter) {\n      case FilterType.FUTURE:\n        return this.#eventsModel.getFutureEvents();\n      case FilterType.PAST:\n        return this.#eventsModel.getPastEvents();\n      default:\n        return this.#eventsModel.getEvents();\n    }\n  }\n\n  #getSortedEvents(events) {\n    switch (this.#currentSort) {\n      case SortType.TIME:\n        return [...events].sort((a, b) => (b.dateTo - b.dateFrom) - (a.dateTo - a.dateFrom));\n      case SortType.PRICE:\n        return [...events].sort((a, b) => b.basePrice - a.basePrice);\n      default:\n        return [...events].sort((a, b) => a.dateFrom - b.dateFrom);\n    }\n  }\n\n  #handleFilterTypeChange = (filterType) => {\n    this.#currentFilter = filterType;\n    this.#clearEventsList();\n    this.#renderEventsList();\n  };\n\n  #handleSortTypeChange = (sortType) => {\n    this.#currentSort = sortType;\n    this.#clearEventsList();\n    this.#renderEventsList();\n  };\n\n  #handleNewEventClick = () => {\n    const eventsListElement = this.#tripContainer.querySelector('.trip-events__list');\n    \n    render(\n      new EventEditView({\n        event: DEFAULT_EVENT,\n        destinations: this.#destinationsModel.getDestinations(),\n        offers: this.#offersModel.getOffers(),\n        onFormSubmit: this.#handleEventAdd,\n        onDeleteClick: this.#handleCloseEditForm,\n        onCloseClick: this.#handleCloseEditForm\n      }),\n      eventsListElement,\n      RenderPosition.AFTERBEGIN\n    );\n    \n    this.#newEventButtonComponent.element.disabled = true;\n  };\n\n  #handleEditClick = (event) => {\n    const eventsListElement = this.#tripContainer.querySelector('.trip-events__list');\n    const eventElement = eventsListElement.querySelector(`[data-id=\"${event.id}\"]`);\n    \n    if (eventElement) {\n      replace(\n        new EventEditView({\n          event,\n          destinations: this.#destinationsModel.getDestinations(),\n          offers: this.#offersModel.getOffers(),\n          onFormSubmit: this.#handleEventUpdate,\n          onDeleteClick: this.#handleEventDelete,\n          onCloseClick: this.#handleCloseEditForm\n        }),\n        eventElement\n      );\n    }\n  };\n\n  #handleFavoriteToggle = (event) => {\n    this.#eventsModel.updateEvent({\n      ...event,\n      isFavorite: !event.isFavorite\n    });\n  };\n\n  #handleEventUpdate = (updatedEvent) => {\n    this.#eventsModel.updateEvent(updatedEvent);\n    this.#clearEventsList();\n    this.#renderEventsList();\n    this.#newEventButtonComponent.element.disabled = false;\n  };\n\n  #handleEventAdd = (newEvent) => {\n    this.#eventsModel.addEvent(newEvent);\n    this.#clearEventsList();\n    this.#renderEventsList();\n    this.#newEventButtonComponent.element.disabled = false;\n  };\n\n  #handleEventDelete = (eventId) => {\n    this.#eventsModel.deleteEvent(eventId);\n    this.#clearEventsList();\n    this.#renderEventsList();\n    this.#newEventButtonComponent.element.disabled = false;\n  };\n\n  #handleCloseEditForm = () => {\n    this.#clearEventsList();\n    this.#renderEventsList();\n    this.#newEventButtonComponent.element.disabled = false;\n  };\n\n  #clearEventsList() {\n    const eventsListElement = this.#tripContainer.querySelector('.trip-events__list');\n    eventsListElement.innerHTML = '';\n  }\n}","import Model from './model/model';\nimport TripPresenter from './presenter/trip-presenter';\n\nconst eventsModel = new Model();\nconst destinationsModel = new Model();\nconst offersModel = new Model();\n\n\nPromise.all([\n  eventsModel.init(),\n  destinationsModel.init(),\n  offersModel.init()\n]).then(() => {\n  const tripMainContainer = document.querySelector('.trip-main');\n  \n  const tripPresenter = new TripPresenter(\n    tripMainContainer,\n    eventsModel,\n    destinationsModel,\n    offersModel\n  );\n  \n  tripPresenter.init();\n}).catch((error) => {\n  console.error('', error);\n});"],"names":["EVENT_TYPES","CITIES","LOREM_IPSUM","getRandomInt","min","max","Math","floor","random","getRandomArrayItem","array","length","Model","constructor","this","_tripEvents","_destinations","_offers","_init","mockData","generateMockData","offers","flatMap","type","count","Array","fill","map","_","i","id","title","price","destinations","city","index","name","description","join","pictures","src","tripEvents","generateTripEvents","destination","basePrice","dateFrom","Date","setDate","getDate","setHours","dateTo","getHours","typeOffers","filter","offer","offerIds","slice","destinationId","startDate","toISOString","endDate","isFavorite","_sortEvents","getTripEvents","getOffersByType","find","offerGroup","getDestinationById","getOffersByIds","ids","includes","updateTripEvent","updatedEvent","event","deleteTripEvent","addTripEvent","events","sort","a","b","RenderPosition","render","component","container","place","arguments","undefined","insertAdjacentElement","getElement","AbstractView","Error","_element","_callback","getTemplate","_createElement","removeElement","template","newElement","document","createElement","innerHTML","firstElementChild","FiltersView","_ref","filters","currentFilter","onFilterChange","super","element","addEventListener","evt","preventDefault","target","value","SortView","currentSortType","_currentSortType","setSortTypeChangeHandler","callback","sortTypeChange","_sortTypeChangeHandler","formatDate","date","toLocaleDateString","month","day","toUpperCase","formatTime","toLocaleTimeString","hour","minute","FilterType","DEFAULT_EVENT","EventEditView","onFormSubmit","onDeleteClick","onCloseClick","querySelector","destinationData","d","o","currentType","charAt","selectedOffers","pic","form","parseInt","from","querySelectorAll","input","checked","EventView","onEditClick","onFavoriteClick","calculateDuration","diff","days","hours","minutes","TripInfoView","sortedEvents","getTripTitle","destinationNames","Boolean","reduce","total","NewEventButtonView","onClick","TripPresenter","tripContainer","eventsModel","destinationsModel","offersModel","init","getEvents","getDestinations","getFutureEvents","getPastEvents","onSortTypeChange","eventsListElement","getOffers","firstEvent","forEach","filterType","sortType","#handleNewEventClick","disabled","eventElement","replace","updateEvent","newEvent","addEvent","eventId","deleteEvent","#handleCloseEditForm","Promise","all","then","tripMainContainer","catch","error","console"],"sourceRoot":""}